Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	
+++ b/src/main/java/org/example/Main.java	
@@ -1,15 +1,13 @@
 package org.example;
 
-import java.io.*;
-import java.util.List;
+import java.io.BufferedReader;
+import java.io.IOException;
 import java.util.Map;
 
 public class Main {
-    public static void main(String[] args) throws IOException {
+    public static void main(String[] args) {
         Map<Integer, BufferedReader> READERS = CreatorOfReaders.createOfReaders(args);
-        List<Integer> result = SortingFunc.sort(READERS);
-        System.out.println(result);
-        WritingToFile.write(result, args);
+        WritingToFile.write(FactoryOfSorting.sorting(ReadersOfConsoleArgs.read(args), READERS), args);
     }
 
 }
\ No newline at end of file
Index: src/main/java/org/example/WritingToFile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/WritingToFile.java b/src/main/java/org/example/WritingToFile.java
--- a/src/main/java/org/example/WritingToFile.java	
+++ b/src/main/java/org/example/WritingToFile.java	
@@ -12,22 +12,22 @@
 
     private static String outputFileName;
 
-    public static void write(List<Integer> list, String ...args) {
-        try(FileWriter writer = new FileWriter(creationOfFileName(args))) {
-            for (Integer element:
-                 list) {
-                writer.write(String.valueOf(element) + "\n");
+    public static <T> void write(List<T> list, String... args) {
+        try (FileWriter writer = new FileWriter(creationOfOutputFileName(args))) {
+            for (T element :
+                    list) {
+                writer.write(element + "\n");
             }
         } catch (IOException e) {
-            e.printStackTrace();
+            System.out.println("Output filepath selected not found! Please check filepath");
         }
     }
 
-    private static String creationOfFileName(String @NotNull ...args) {
+    private static String creationOfOutputFileName(String @NotNull ... args) {
         Path dir = Paths.get("/Users/milovanov/IdeaProjects/MergeSorting/src/main/java/org/example/testingFiles/");
-        for (String arg:
-             args) {
-            if(arg.contains("out") && arg.endsWith(".txt")) {
+        for (String arg :
+                args) {
+            if (arg.contains("out") && arg.endsWith(".txt")) {
                 outputFileName = dir.resolve(arg).toString();
             }
         }
Index: src/main/java/org/example/SortingFunc.java
===================================================================
diff --git a/src/main/java/org/example/SortingFunc.java b/src/main/java/org/example/functions/SortingFuncForIntegerValues.java
rename from src/main/java/org/example/SortingFunc.java
rename to src/main/java/org/example/functions/SortingFuncForIntegerValues.java
--- a/src/main/java/org/example/SortingFunc.java	
+++ b/src/main/java/org/example/functions/SortingFuncForIntegerValues.java	
@@ -1,26 +1,28 @@
-package org.example;
+package org.example.functions;
 
 
-import java.io.*;
+import java.io.BufferedReader;
+import java.io.IOException;
 import java.util.*;
 
-public class SortingFunc {
+public class SortingFuncForIntegerValues {
+
     public static List<Integer> sort(Map<Integer, BufferedReader> map) throws IOException {
         int bufferSize = map.size();
         Map<Integer, Integer> buffer = new HashMap<>();
         List<Integer> result = new ArrayList<>();
 
-
         for (int k = 0; k < bufferSize; k++) {
+
             buffer.put(k, Integer.valueOf(map.get(k).readLine()));
         }
 
         do {
             int place = Collections.min(map.keySet());
             int target = buffer.get(place);
-            for (Map.Entry<Integer, Integer> entry:
-                 buffer.entrySet()) {
-                if(target > entry.getValue()) {
+            for (Map.Entry<Integer, Integer> entry :
+                    buffer.entrySet()) {
+                if (target > entry.getValue()) {
                     target = entry.getValue();
                     place = entry.getKey();
                 }
Index: src/main/java/org/example/testingFiles/out.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/testingFiles/out.txt b/src/main/java/org/example/testingFiles/out.txt
--- a/src/main/java/org/example/testingFiles/out.txt	
+++ b/src/main/java/org/example/testingFiles/out.txt	
@@ -1,9 +1,9 @@
-1
-1
-1
-2
-3
-4
-8
-9
-27
+i
+h
+g
+f
+e
+d
+c
+b
+a
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,9 +4,19 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6f334e34-0196-4767-8b9b-5377d54f79ae" name="Changes" comment="Working version">
+    <list default="true" id="6f334e34-0196-4767-8b9b-5377d54f79ae" name="Changes" comment="Working version with changed version of SortingFunc.java">
+      <change afterPath="$PROJECT_DIR$/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/TypesOfConsoleArguments.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/SortingFunc.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/SortingFunc.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/CreatorOfReaders.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/CreatorOfReaders.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/SortingFunc.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/functions/SortingFuncForIntegerValues.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/WritingToFile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/WritingToFile.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in1.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in1.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in2.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in2.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in3.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/in3.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/out.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/testingFiles/out.txt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -21,7 +31,9 @@
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
       <list>
+        <option value="Enum" />
         <option value="Class" />
+        <option value="Interface" />
       </list>
     </option>
   </component>
@@ -44,13 +56,18 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;
+  }
+}</component>
   <component name="RunManager">
     <configuration name="MergeSotringConf" type="Application" factoryName="Application">
       <option name="ALTERNATIVE_JRE_PATH" value="1.8" />
       <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="true" />
       <option name="MAIN_CLASS_NAME" value="org.example.Main" />
       <module name="MergeSorting.main" />
-      <option name="PROGRAM_PARAMETERS" value="out.txt in1.txt in2.txt in3.txt" />
+      <option name="PROGRAM_PARAMETERS" value="-s -d out.txt in1.txt in2.txt in3.txt" />
       <method v="2">
         <option name="Make" enabled="true" />
       </method>
@@ -86,7 +103,14 @@
       <option name="project" value="LOCAL" />
       <updated>1672817243124</updated>
     </task>
-    <option name="localTasksCounter" value="4" />
+    <task id="LOCAL-00004" summary="Working version with changed version of SortingFunc.java">
+      <created>1672818852414</created>
+      <option name="number" value="00004" />
+      <option name="presentableId" value="LOCAL-00004" />
+      <option name="project" value="LOCAL" />
+      <updated>1672818852414</updated>
+    </task>
+    <option name="localTasksCounter" value="5" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -103,6 +127,7 @@
   <component name="VcsManagerConfiguration">
     <MESSAGE value="Working version with small issue connected with writing data into file" />
     <MESSAGE value="Working version" />
-    <option name="LAST_COMMIT_MESSAGE" value="Working version" />
+    <MESSAGE value="Working version with changed version of SortingFunc.java" />
+    <option name="LAST_COMMIT_MESSAGE" value="Working version with changed version of SortingFunc.java" />
   </component>
 </project>
\ No newline at end of file
